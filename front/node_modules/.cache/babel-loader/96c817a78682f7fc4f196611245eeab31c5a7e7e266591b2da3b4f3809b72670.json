{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/santoriello/front/src/components/CodeRain.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../styles/CodeRain.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeRain = () => {\n  _s();\n  const [drops, setDrops] = useState([]);\n  useEffect(() => {\n    const createRainDrop = () => {\n      setDrops(prevDrops => [...prevDrops, {\n        id: Math.random(),\n        char: getRandomChar(),\n        left: `${Math.random() * 100}vw`,\n        duration: `${Math.random() * 2 + 3}s`,\n        // 3-5 seconds\n        fontSize: `${Math.random() * 10 + 10}px` // 10-20px\n      }]);\n\n      // Limit the number of drops to prevent memory overflow\n      if (drops.length > 100) {\n        setDrops(prevDrops => prevDrops.slice(1));\n      }\n    };\n    const interval = setInterval(createRainDrop, 100); // New drop every 100ms\n\n    return () => clearInterval(interval);\n  }, [drops]);\n  const getRandomChar = () => {\n    const chars = \"0123456789ABCDEF<>=%/?!{}()\";\n    return chars[Math.floor(Math.random() * chars.length)];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-rain\",\n    children: drops.map(drop => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code\",\n      style: {\n        left: drop.left,\n        animationDuration: drop.duration,\n        fontSize: drop.fontSize\n      },\n      children: drop.char\n    }, drop.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeRain, \"GbjsVWFSnns/F/fUpRGkpAymol8=\");\n_c = CodeRain;\nexport default CodeRain;\nvar _c;\n$RefreshReg$(_c, \"CodeRain\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CodeRain","_s","drops","setDrops","createRainDrop","prevDrops","id","Math","random","char","getRandomChar","left","duration","fontSize","length","slice","interval","setInterval","clearInterval","chars","floor","className","children","map","drop","style","animationDuration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/santoriello/front/src/components/CodeRain.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../styles/CodeRain.css\";\n\nconst CodeRain = () => {\n  const [drops, setDrops] = useState([]);\n\n  useEffect(() => {\n    const createRainDrop = () => {\n      setDrops((prevDrops) => [\n        ...prevDrops,\n        {\n          id: Math.random(),\n          char: getRandomChar(),\n          left: `${Math.random() * 100}vw`,\n          duration: `${Math.random() * 2 + 3}s`, // 3-5 seconds\n          fontSize: `${Math.random() * 10 + 10}px`, // 10-20px\n        },\n      ]);\n\n      // Limit the number of drops to prevent memory overflow\n      if (drops.length > 100) {\n        setDrops((prevDrops) => prevDrops.slice(1));\n      }\n    };\n\n    const interval = setInterval(createRainDrop, 100); // New drop every 100ms\n\n    return () => clearInterval(interval);\n  }, [drops]);\n\n  const getRandomChar = () => {\n    const chars = \"0123456789ABCDEF<>=%/?!{}()\";\n    return chars[Math.floor(Math.random() * chars.length)];\n  };\n\n  return (\n    <div className=\"code-rain\">\n      {drops.map((drop) => (\n        <div\n          key={drop.id}\n          className=\"code\"\n          style={{\n            left: drop.left,\n            animationDuration: drop.duration,\n            fontSize: drop.fontSize,\n          }}\n        >\n          {drop.char}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CodeRain;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAGA,CAAA,KAAM;MAC3BD,QAAQ,CAAEE,SAAS,IAAK,CACtB,GAAGA,SAAS,EACZ;QACEC,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC;QACjBC,IAAI,EAAEC,aAAa,CAAC,CAAC;QACrBC,IAAI,EAAE,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI;QAChCI,QAAQ,EAAE,GAAGL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;QAAE;QACvCK,QAAQ,EAAE,GAAGN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAE;MAC5C,CAAC,CACF,CAAC;;MAEF;MACA,IAAIN,KAAK,CAACY,MAAM,GAAG,GAAG,EAAE;QACtBX,QAAQ,CAAEE,SAAS,IAAKA,SAAS,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC;MAC7C;IACF,CAAC;IAED,MAAMC,QAAQ,GAAGC,WAAW,CAACb,cAAc,EAAE,GAAG,CAAC,CAAC,CAAC;;IAEnD,OAAO,MAAMc,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC;EAEX,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMS,KAAK,GAAG,6BAA6B;IAC3C,OAAOA,KAAK,CAACZ,IAAI,CAACa,KAAK,CAACb,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGW,KAAK,CAACL,MAAM,CAAC,CAAC;EACxD,CAAC;EAED,oBACEf,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBpB,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACdzB,OAAA;MAEEsB,SAAS,EAAC,MAAM;MAChBI,KAAK,EAAE;QACLd,IAAI,EAAEa,IAAI,CAACb,IAAI;QACfe,iBAAiB,EAAEF,IAAI,CAACZ,QAAQ;QAChCC,QAAQ,EAAEW,IAAI,CAACX;MACjB,CAAE;MAAAS,QAAA,EAEDE,IAAI,CAACf;IAAI,GARLe,IAAI,CAAClB,EAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAST,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAjDID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}